import{_ as o,p as c,q as d,s as e,R as n,t as r,Y as i,n as s}from"./framework-aa5c4115.js";const p={},t=e("h2",{id:"_1-注册npm账号和密码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-注册npm账号和密码","aria-hidden":"true"},"#"),n(" 1. 注册npm账号和密码")],-1),h={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},m=i('<h2 id="_2-在本地使用-npm-init-创建package-json文件从而初始化项目-创建的时候包名必须是唯一的" tabindex="-1"><a class="header-anchor" href="#_2-在本地使用-npm-init-创建package-json文件从而初始化项目-创建的时候包名必须是唯一的" aria-hidden="true">#</a> 2. 在本地使用 <code>npm init</code> 创建<code>package.json</code>文件从而初始化项目，创建的时候包名必须是唯一的</h2><h2 id="_3-创建入口文件index-js-编写代码" tabindex="-1"><a class="header-anchor" href="#_3-创建入口文件index-js-编写代码" aria-hidden="true">#</a> 3. 创建入口文件<code>index.js</code> 编写代码</h2><h2 id="_4-在黑窗口输入命令npm-login登录到npm" tabindex="-1"><a class="header-anchor" href="#_4-在黑窗口输入命令npm-login登录到npm" aria-hidden="true">#</a> 4. 在黑窗口输入命令<code>npm login</code>登录到<code>npm</code></h2><h2 id="_5-登录成功-运行-npm-publish-命令-即可将包发布到npm上" tabindex="-1"><a class="header-anchor" href="#_5-登录成功-运行-npm-publish-命令-即可将包发布到npm上" aria-hidden="true">#</a> 5. 登录成功，运行 <code>npm publish</code> 命令，即可将包发布到<code>npm</code>上</h2><h2 id="最后-如果修改项目代码重新上传到npm的时候需要修改package-json里面的版本号version-因为npm不允许版本一样。修改之后依次运行两个命令-npm-version-patch-npm-publish即可·上传成功" tabindex="-1"><a class="header-anchor" href="#最后-如果修改项目代码重新上传到npm的时候需要修改package-json里面的版本号version-因为npm不允许版本一样。修改之后依次运行两个命令-npm-version-patch-npm-publish即可·上传成功" aria-hidden="true">#</a> 最后，如果修改项目代码重新上传到npm的时候需要修改<code>package.json</code>里面的版本号<code>version</code>，因为<code>npm</code>不允许版本一样。修改之后依次运行两个命令 <code>npm version patch</code> <code>npm publish</code>即可·上传成功</h2>',5);function l(_,u){const a=s("ExternalLinkIcon");return c(),d("div",null,[t,e("p",null,[e("a",h,[n("点击去注册"),r(a)])]),m])}const f=o(p,[["render",l],["__file","fabunpmbao.html.vue"]]);export{f as default};
