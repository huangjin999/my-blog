import{_ as n,p as s,q as a,Y as t}from"./framework-aa5c4115.js";const l={},i=t(`<h2 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型" aria-hidden="true">#</a> 盒子模型</h2><ul><li>client系列 width height top left</li><li>offset系列 width height top left parent</li><li>scroll系列 width height top left</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">#div1</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>

    <span class="token comment">/* box-sizeing加上后，指的是盒子在页面上占据的大小 */</span>
    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="client系列" tabindex="-1"><a class="header-anchor" href="#client系列" aria-hidden="true">#</a> <strong>client系列：</strong></h3><ul><li>clientWidth（可视区域宽度）: 获取盒子的内容width+左右的padding</li><li>clientHeight（可视区域高度）: 获取盒子的内容height+上下的padding</li><li>clientTop:获取盒子的上边框的粗细</li><li>clientLeft:获取盒子的左边框的粗细</li></ul><p><strong>要获取当前页面内容的宽度（可视区域）：</strong></p><ul><li>console.log(document.body.clientWidth) // 获取一屏的宽度</li><li>console.log(document.documentElement.clientWidth)</li></ul><p><strong>要获取当前页面内容的高度（可视区域）：</strong></p><ul><li>console.log(document.body.clientHeight); // 获取内容（多屏）的高度 获取可视区域高度</li><li>console.log(document.documentElement.clientHeight); // 获取一屏的高度</li></ul><p><strong>client系列的注意点：</strong></p><ul><li>不能获取，不能设置，是只读的</li><li>得到的是一个数值，没有单位</li><li>得到的是一个整数，不是小数，及时测试量出来是小数，也会转化成整数</li><li>不管你的内容是否溢出，得到的是可视区的大小</li></ul><h3 id="offset系列" tabindex="-1"><a class="header-anchor" href="#offset系列" aria-hidden="true">#</a> <strong>offset系列：</strong></h3><ul><li>offsetWidth: box.offsetWidth 在clientWidth的基础上加了border</li><li>offsetHeight: box.offsetHeight 在clientHeight的基础上加了border</li><li>offsetTop: 获取一个绝对定位元素相对于参考点的上面的距离</li><li>offsetLeft: 获取一个绝对定位元素相对于参考点的左面的距离</li><li>offsetParent(***): 获取一个定位元素的参考点</li></ul><h3 id="scrollwidth" tabindex="-1"><a class="header-anchor" href="#scrollwidth" aria-hidden="true">#</a> <strong>scrollWidth:</strong></h3><ul><li>在没有内容溢出(水平方向上的溢出)的情况下：scrollWidth == clientWidth</li><li>在内容溢出的情况下：scrollWidth的值约等于真实内容的宽度，此时，clientWidth的值是约等于，不同浏览器中得到的值可能不一样</li><li>overflow属性会影响scrollWidth。 只能获取值，不能设置值</li></ul><p><strong>scrollHeight:</strong></p><ul><li>在没有内容溢出的情况下：scrollHeight = clientHeight</li><li>在内容溢出的情况下：scrollHeight的值约等于真实内容的高度，不同浏览器中得到的值可能不一样</li><li>overflow属性会影响scrollHeight。</li><li>只能获取值，不能设置值</li></ul><p><strong>scrollTop:</strong></p><ul><li>获取垂直滚动条滚动的距离（获取垂直滚动条卷去的高度）</li><li>特殊：不只可以获取，也可以设置（可读可写）</li></ul>`,19),e=[i];function o(p,c){return s(),a("div",null,e)}const d=n(l,[["render",o],["__file","index_02.html.vue"]]);export{d as default};
