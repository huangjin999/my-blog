import{_ as s,p as n,q as a,Y as e}from"./framework-aa5c4115.js";const t={},o=e(`<h2 id="列表渲染v-for-v-if" tabindex="-1"><a class="header-anchor" href="#列表渲染v-for-v-if" aria-hidden="true">#</a> 列表渲染v-for-v-if</h2><ul><li>同时使用 v-if 和 v-for 是不推荐的，因为这样二者的优先级不明显。</li><li>当它们同时存在于一个节点上时，v-if 比 v-for 的优先级更高。</li><li>这意味着 v-if 的条件将无法访问到 v-for 作用域内定义的变量别名：</li></ul><h3 id="_1-这会抛出一个错误-因为属性-todo-此时没有在该实例上定义" tabindex="-1"><a class="header-anchor" href="#_1-这会抛出一个错误-因为属性-todo-此时没有在该实例上定义" aria-hidden="true">#</a> 1. 这会抛出一个错误，因为属性 todo 此时没有在该实例上定义</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;todo in obj&quot;</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!todo.done&quot;</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token punctuation">{</span> todo<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> reactive<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;王五&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-在外新包装一层-template-再在其上使用-v-for-可以解决这个问题-这也更加明显易读" tabindex="-1"><a class="header-anchor" href="#_2-在外新包装一层-template-再在其上使用-v-for-可以解决这个问题-这也更加明显易读" aria-hidden="true">#</a> 2. 在外新包装一层 <code>&lt;template&gt;</code> 再在其上使用 v-for 可以解决这个问题 (这也更加明显易读)：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token operator">&lt;</span>template v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;todo in obj&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!todo.done&quot;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">{</span><span class="token punctuation">{</span> todo<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),p=[o];function r(l,c){return n(),a("div",null,p)}const d=s(t,[["render",r],["__file","liebiaoxuanranv-for-v-if.html.vue"]]);export{d as default};
